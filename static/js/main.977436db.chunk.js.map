{"version":3,"sources":["img/sezzle_logo.png","img/customer-service.svg","components/ToggleButton.jsx","components/QuarterMoon.jsx","components/TitleTray.jsx","components/PopupHeader.jsx","components/Popup.jsx","components/BottomRightPopup.jsx","components/TopBanner.jsx","js/popup.js","components/OverlayPopup.jsx","components/TimerPopup.jsx","components/TypingAnimation.jsx","js/chat.js","components/App.jsx","components/Chatbot.jsx","js/utility.js","index.js"],"names":["module","exports","ToggleButton","props","active","onClick","className","colors","QuarterMoon","quad","setQuad","cur","style","backgroundColor","backgroundImage","TitleTray","useState","darkTheme","setDarkTheme","src","logo","filter","PopupHeader","header","closePopup","Popup","open","text","BottomRightPopup","TopBanner","href","closeIfClickedOutside","e","popupClass","clickedOutside","hasParentClass","element","classname","split","indexOf","parentNode","target","OverlayPopup","TimerPopup","timerID","setTimerID","timer","setTimer","useEffect","id","setInterval","time","clearInterval","timeInSecs","totalTime","hours","Math","floor","minutes","seconds","Object","keys","forEach","key","num","toString","length","formatTime","window","location","reload","TypingAnimation","merchantSupportTeam","shopperSupportTeam","nothingAnswer","answer","response","platformGuide","platform","url","chatTree","options","widgets","component","label","description","lastActive","setLastActive","currentChat","setCurrentChat","incoming","setIncoming","setOptions","conversation","setConversation","bottomOfChat","useRef","resetChat","match","speaker","slice","current","scrollIntoView","icon","map","el","i","convoElements","push","option","undefined","ref","App","Array","fill","widgetsOpen","setWidgetsOpen","togglePopup","newArr","React","root","document","documentElement","setProperty","toggleDarkTheme","createElement","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.977436db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sezzle_logo.b0fe0998.png\";","module.exports = __webpack_public_path__ + \"static/media/customer-service.0e0e8a17.svg\";","import React from \"react\";\nimport \"css/toggleButton.css\";\n\nconst ToggleButton = (props) => {\n  const { active, onClick } = props;\n  return (\n    <div className=\"toggle-button \" onClick={onClick}>\n      <div className=\"toggle-circle-container\">\n        <div className={`toggle-circle ${active ? \"active\" : \"\"}`} />\n      </div>\n    </div>\n  );\n};\n\nexport default ToggleButton;\n","import React from \"react\";\nimport \"css/dial.css\";\n\nconst colors = [\"#F77275\", \"#F9B835\", \"#3CD2A1\", \"#AA49CF\"];\n\nconst QuarterMoon = (props) => {\n  const { quad, setQuad } = props;\n  return (\n    <div\n      className=\"dial\"\n      onClick={() => setQuad((cur) => (cur + 1) % 4)}\n      style={{\n        backgroundColor: colors[quad],\n        backgroundImage: `linear-gradient(${\n          -90 + 90 * quad\n        }deg, transparent 50%, white 50%), linear-gradient(${\n          90 * quad\n        }deg, white 50%, transparent 50%)`,\n      }}\n    />\n  );\n};\n\nexport default QuarterMoon;\n","import React, { useState } from \"react\";\nimport \"css/titleTray.css\";\nimport ToggleButton from \"components/ToggleButton.jsx\";\nimport logo from \"img/sezzle_logo.png\";\nimport QuarterMoon from \"components/QuarterMoon\";\n\nconst TitleTray = (props) => {\n  const [quad, setQuad] = useState(0);\n  const { darkTheme, setDarkTheme } = props;\n  return (\n    <div className=\"title-tray\">\n      <div className=\"darktheme-container\">\n        <div className=\"darktheme-label\">Dark Theme</div>\n        <ToggleButton\n          active={darkTheme}\n          onClick={() => setDarkTheme(!darkTheme)}\n        />\n      </div>\n      <img\n        src={logo}\n        className=\"logo\"\n        style={{ filter: `hue-rotate(${90 * quad}deg)` }}\n      />\n      <QuarterMoon {...{ quad, setQuad }} />\n    </div>\n  );\n};\n\nexport default TitleTray;\n","import React from \"react\";\n\nconst PopupHeader = (props) => {\n  const { header, closePopup } = props;\n  return (\n    <div className=\"header\">\n      <span>{header}</span>\n      <button className=\"close-button\" onClick={closePopup}>\n        <div className=\"close-icon\" />\n      </button>\n    </div>\n  );\n};\n\nexport default PopupHeader;\n","import React from \"react\";\nimport \"css/popup.css\";\nimport PopupHeader from \"components/PopupHeader\";\n\nconst Popup = (props) => {\n  const { open, header, text, closePopup, className } = props;\n  return (\n    <div className={`${className} popup ${open ? \"open\" : \"\"}`}>\n      <PopupHeader {...{ header, closePopup }} />\n      <div className=\"body\">{text}</div>\n    </div>\n  );\n};\n\nexport default Popup;\n","import React from \"react\";\nimport Popup from \"./Popup\";\n\nconst BottomRightPopup = (props) => {\n  const { open } = props;\n  return (\n    <div className={`corner-container bottom-right ${open ? \"open\" : \"\"}`}>\n      <Popup {...props} />\n    </div>\n  );\n};\n\nexport default BottomRightPopup;\n","import React from \"react\";\nimport \"css/topBanner.css\";\n\nconst TopBanner = (props) => {\n  const { open, text, closePopup } = props;\n  return (\n    <div className={`top-banner ${open ? \"open\" : \"\"}`}>\n      <div>\n        Sezzle is currently hiring:{\" \"}\n        <a href=\"https://sezzle.com/careers\">learn more {\">\"}</a>\n      </div>\n      <div>{text}</div>\n      <button className=\"top-banner-close-btn\" onClick={closePopup}>\n        <div className=\"cross-line\" />\n        <div className=\"cross-line\" />\n      </button>\n    </div>\n  );\n};\n\nexport default TopBanner;\n","const hasParentClass = (element, classname) => {\n  if (element.className && element.className.split(\" \").indexOf(classname) >= 0)\n    return true;\n  return element.parentNode && hasParentClass(element.parentNode, classname);\n};\n\nexport const closeIfClickedOutside = (e, open, closePopup, popupClass) => {\n  const clickedOutside = !hasParentClass(e.target, popupClass);\n  if (open && clickedOutside) closePopup();\n};\n","import React from \"react\";\nimport \"css/overlayPopup.css\";\nimport Popup from \"./Popup.jsx\";\nimport { closeIfClickedOutside } from \"js/popup\";\n\nconst OverlayPopup = (props) => {\n  const { open, closePopup } = props;\n\n  return (\n    <div\n      className={`overlay-popup-container ${open ? \"open\" : \"\"}`}\n      onClick={(e) =>\n        closeIfClickedOutside(e, open, closePopup, \"overlay-popup\")\n      }\n    >\n      <Popup {...props} className=\"overlay-popup\" />\n    </div>\n  );\n};\n\nexport default OverlayPopup;\n","import React, { useEffect, useState } from \"react\";\nimport PopupHeader from \"./PopupHeader.jsx\";\nimport \"css/timerPopup.css\";\nimport { closeIfClickedOutside } from \"js/popup\";\n\nconst COUNTDOWN_TIMER_LENGTH = 120;\n\nconst TimerPopup = (props) => {\n  const { open, header, closePopup } = props;\n  const [timerID, setTimerID] = useState(null);\n  const [timer, setTimer] = useState(COUNTDOWN_TIMER_LENGTH);\n\n  useEffect(() => {\n    if (open) {\n      const id = setInterval(() => setTimer((time) => time - 1), 1000);\n      setTimerID(id);\n      return () => clearInterval(id);\n    } else setTimer(COUNTDOWN_TIMER_LENGTH);\n  }, [open]);\n\n  useEffect(() => {\n    if (timer === 0) clearInterval(timerID);\n  }, [timer]);\n\n  const intToTwoDecimals = (num) =>\n    num.toString().length > 1 ? num.toString() : \"0\" + num.toString();\n\n  const getTimeObject = (totalTime) => {\n    const hours = Math.floor(totalTime / 3600);\n    const minutes = Math.floor((totalTime % 3600) / 60);\n    const seconds = totalTime % 60;\n    return { hours, minutes, seconds };\n  };\n\n  const formatTime = (timeInSecs) => {\n    let time = getTimeObject(timeInSecs);\n    Object.keys(time).forEach((key) => {\n      time[key] = intToTwoDecimals(time[key]);\n    });\n    return `${time.hours}:${time.minutes}:${time.seconds}`;\n  };\n\n  return (\n    <div\n      className={`overlay-popup-container ${open ? \"open\" : \"\"}`}\n      onClick={(e) => closeIfClickedOutside(e, open, closePopup, \"timer-popup\")}\n    >\n      <div className={`timer-popup popup ${open ? \"open\" : \"\"}`}>\n        <PopupHeader {...{ header, closePopup }} />\n        <div className=\"body\">\n          <div className=\"countdown-text\">\n            Get 50% off when you sign up now.\n          </div>\n          <div className=\"countdown-text\">\n            Discount available for a limited time only!\n          </div>\n          <div\n            className={`countdown ${timer < 60 ? \"final\" : \"\"} ${\n              timer < 30 ? \"very-last\" : \"\"\n            }`}\n          >\n            {formatTime(timer)}\n          </div>\n          <button\n            className=\"signup-button\"\n            onClick={() => window.location.reload()}\n          >\n            SIGN UP\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TimerPopup;\n","import React from \"react\";\nimport \"css/typingAnimation.css\";\n\nconst TypingAnimation = () => {\n  return (\n    <div className=\"typing-animation\">\n      <div className=\"dot\" />\n      <div className=\"dot\" />\n      <div className=\"dot\" />\n    </div>\n  );\n};\n\nexport default TypingAnimation;\n","const merchantSupportTeam = {\n  text: [\"Please call the merchant support team on 202-555-0195\"],\n};\nconst shopperSupportTeam = {\n  text: [\"Please call the shopper support team on 202-555-0179\"],\n};\nconst nothingAnswer = {\n  answer: \"Nothing, I am just browsing.\",\n  response: {\n    text: [\n      \"No problem! Please click the reset button if you have any questions.\",\n    ],\n  },\n};\n\nconst platformGuide = (platform) => {\n  let url = null;\n  if (platform === \"shopify\")\n    url = \"https://help.sezzle.com/merchant-shopify-settings\";\n  else if (platform === \"woocommerce\")\n    url = \"https://help.sezzle.com/sezzle-woocommerce\";\n  else if (platform === \"commentsold\")\n    url = \"https://help.sezzle.com/sezzle-commentsold\";\n  else if (platform === \"other\")\n    url = \"https://help.sezzle.com/merchant-other-platforms\";\n  return {\n    text: [\"Please see the following guide:\", url],\n  };\n};\n\nexport const chatTree = {\n  text: [\"Welcome to Sezzle!\", \"Are you a shopper or a merchant?\"],\n  options: [\n    {\n      answer: \"Merchant\",\n      response: {\n        text: [\"How can we help you today?\"],\n        options: [\n          {\n            answer: \"I'd like to contact the sales team.\",\n            response: { text: [\"Please call the sales team on 202-555-0109\"] },\n          },\n          {\n            answer: \"I need help connecting Sezzle to my ecommerce platform.\",\n            response: {\n              text: [\"Which ecommerce platform does your store use?\"],\n              options: [\n                {\n                  answer: \"Shopify\",\n                  response: platformGuide(\"shopify\"),\n                },\n                {\n                  answer: \"Woocommerce\",\n                  response: platformGuide(\"woocommerce\"),\n                },\n                {\n                  answer: \"CommentSold\",\n                  response: platformGuide(\"commentsold\"),\n                },\n                {\n                  answer: \"Other Platform\",\n                  response: platformGuide(\"other\"),\n                },\n              ],\n            },\n          },\n          {\n            answer: \"I think my account may have been hacked.\",\n            response: merchantSupportTeam,\n          },\n          {\n            answer: \"My issue is not listed here.\",\n            response: merchantSupportTeam,\n          },\n          nothingAnswer,\n        ],\n      },\n    },\n    {\n      answer: \"Shopper\",\n      response: {\n        text: [\"How can we help you today?\"],\n        options: [\n          {\n            answer: \"I have an issue with a payment.\",\n            response: {\n              text: [\"What is your payment issue?\"],\n              options: [\n                {\n                  answer: \"I would like a refund.\",\n                  response: {\n                    text: [\n                      \"Please contact the vendor to begin the refund process.\",\n                      \"For more information click the following link:\",\n                      \"https://help.sezzle.com/shopper-returns/shopper-refund-process\",\n                    ],\n                  },\n                },\n                {\n                  answer: \"A payment I made has not registered on my account.\",\n                  response: shopperSupportTeam,\n                },\n                ,\n                {\n                  answer: \"My issue isn't listed.\",\n                  response: shopperSupportTeam,\n                },\n              ],\n            },\n          },\n          {\n            answer: \"There is an issue with my account.\",\n            response: {\n              text: [\"What account issue do you have?\"],\n              options: [\n                {\n                  answer: \"I think my account may have been hacked.\",\n                  response: shopperSupportTeam,\n                },\n                {\n                  answer: \"I cannot login to my account.\",\n                  response: {\n                    text: [\n                      \"Please try reseting your PIN with the following link:\",\n                      \"https://dashboard.sezzle.com/customer/reset-pin/verify-phone\",\n                      \"If you still cannot access your account please contact support on 202-555-0179.\",\n                    ],\n                  },\n                },\n              ],\n            },\n          },\n          nothingAnswer,\n        ],\n      },\n    },\n  ],\n};\n","import React, { useState } from \"react\";\n\nimport \"css/app.css\";\nimport \"css/containers.css\";\n\nimport TitleTray from \"components/TitleTray\";\n\nimport BottomRightPopup from \"components/BottomRightPopup.jsx\";\nimport TopBanner from \"components/TopBanner.jsx\";\nimport OverlayPopup from \"components/OverlayPopup.jsx\";\nimport TimerPopup from \"components/TimerPopup.jsx\";\nimport Chatbot from \"components/Chatbot.jsx\";\n\nimport { toggleDarkTheme } from \"js/utility\";\n\nconst widgets = [\n  {\n    component: BottomRightPopup,\n    label: \"Popup\",\n    description: \"A small popup that appears in the bottom right corner.\",\n  },\n  {\n    component: TopBanner,\n    label: \"Banner\",\n    description: \"A banner that appears across the top of the screen.\",\n  },\n  {\n    component: OverlayPopup,\n    label: \"Overlay\",\n    description: \"A popup that appears with a dark overlay across the screen.\",\n  },\n  {\n    component: TimerPopup,\n    label: \"Timer\",\n    description: \"A popup with a countdown timer.\",\n  },\n  {\n    component: Chatbot,\n    label: \"Chatbot\",\n    description: \"A chatbot to answer customer queries.\",\n  },\n];\n\nfunction App() {\n  const [widgetsOpen, setWidgetsOpen] = useState(\n    new Array(widgets.length).fill(false)\n  );\n  const [darkTheme, setDarkTheme] = useState(false);\n\n  const togglePopup = (i) => {\n    let newArr = [...widgetsOpen];\n    newArr[i] = !widgetsOpen[i];\n    setWidgetsOpen(newArr);\n  };\n\n  React.useEffect(() => {\n    toggleDarkTheme(darkTheme);\n  }, [darkTheme]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"title\">Sezzle Popup Widgets</div>\n      <TitleTray {...{ darkTheme, setDarkTheme }} />\n      <div className=\"widget-info\">\n        {[...Array(widgets.length).keys()].map((i) => [\n          <button\n            className={`btn ${widgetsOpen[i] ? \"enabled\" : \"\"}`}\n            onClick={() => togglePopup(i)}\n          >\n            {widgets[i].label}\n          </button>,\n          <div>{widgets[i].description}</div>,\n          React.createElement(widgets[i].component, {\n            open: widgetsOpen[i],\n            header: widgets[i].label,\n            text:\n              \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Assumenda, minus.\",\n            closePopup: () => togglePopup(i),\n          }),\n        ])}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"css/chatbot.css\";\nimport PopupHeader from \"components/PopupHeader\";\nimport TypingAnimation from \"components/TypingAnimation\";\nimport icon from \"img/customer-service.svg\";\nimport { chatTree } from \"js/chat\";\n\nconst Chatbot = (props) => {\n  const [lastActive, setLastActive] = useState(0);\n  const [currentChat, setCurrentChat] = useState(chatTree);\n  const [incoming, setIncoming] = useState(chatTree.text);\n  const [options, setOptions] = useState([]);\n  const [conversation, setConversation] = useState([]);\n  const bottomOfChat = useRef(null);\n  const { open, header, closePopup } = props;\n\n  const shouldMessageSend = () => {\n    if (incoming.length === 0) return false;\n    else if (incoming[0].match(\"http\") && lastActive > 0) return true;\n    else if (lastActive > incoming[0].length / 24) return true;\n    else return false;\n  };\n\n  const resetChat = () => {\n    setCurrentChat(chatTree);\n    setIncoming(chatTree.text);\n    setConversation([]);\n    setOptions([]);\n  };\n\n  const userSelectOption = (option) => {\n    setConversation((cur) => [\n      ...cur,\n      { speaker: \"user\", text: option.answer },\n    ]);\n    setCurrentChat(option.response);\n    setLastActive(0);\n    setOptions([]);\n  };\n\n  const botSendMessage = () => {\n    setConversation((cur) => [...cur, { speaker: \"bot\", text: incoming[0] }]);\n    setIncoming((cur) => cur.slice(1));\n    setLastActive(0);\n  };\n\n  useEffect(() => {\n    if (open) {\n      const id = setInterval(() => setLastActive((time) => time + 1), 1000);\n      return () => clearInterval(id);\n    } else resetChat();\n  }, [open]);\n\n  useEffect(() => setIncoming(currentChat.text), [currentChat]);\n\n  useEffect(() => {\n    const sendMessage = shouldMessageSend();\n    if (sendMessage) botSendMessage();\n    else if (incoming.length === 0) setOptions(currentChat.options);\n  }, [lastActive]);\n\n  useEffect(() => bottomOfChat.current.scrollIntoView(), [\n    conversation,\n    options,\n  ]);\n\n  return (\n    <div className={`corner-container bottom-left ${open ? \"open\" : \"\"}`}>\n      <div className={`chatbot popup ${open ? \"open\" : \"\"}`}>\n        <PopupHeader {...{ header, closePopup }} />\n        <div className=\"body\">\n          <img src={icon} className=\"chatbot-icon\" />\n          <div className=\"conversation\">\n            {conversation.map((el, i) => {\n              let convoElements = [];\n              if (i === 0 || conversation[i - 1].speaker !== \"bot\")\n                convoElements.push(\n                  <div className=\"chat-name\">SezzleSupport</div>\n                );\n              if (el.text.match(\"http\"))\n                convoElements.push(\n                  <a href={el.text} className={`message ${el.speaker}`}>\n                    {el.text}\n                  </a>\n                );\n              else\n                convoElements.push(\n                  <div className={`message ${el.speaker}`}>{el.text}</div>\n                );\n              return convoElements;\n            })}\n            {incoming.length > 0 && <TypingAnimation />}\n          </div>\n          {options && incoming.length === 0 && (\n            <div className=\"options\">\n              {options.map((el) => (\n                <button\n                  className={`message option`}\n                  onClick={() => userSelectOption(el)}\n                >\n                  {el.answer}\n                </button>\n              ))}\n            </div>\n          )}\n          {incoming.length === 0 && currentChat.options === undefined && (\n            <button\n              className={`reset-btn message option`}\n              onClick={() => resetChat()}\n            >\n              Reset Assistant\n            </button>\n          )}\n          <div ref={bottomOfChat}></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;\n","export const toggleDarkTheme = (darkTheme) => {\n  let root = document.documentElement;\n  if (darkTheme) {\n    root.style.setProperty(\"--background-color\", \"#333\");\n    root.style.setProperty(\"--popup-header-color\", \"#666\");\n    root.style.setProperty(\"--banner-color\", \"rgb(194, 112, 11)\");\n    root.style.setProperty(\"--shadow-color\", \"#111\");\n    root.style.setProperty(\"--text-color\", \"white\");\n  } else {\n    root.style.setProperty(\"--background-color\", \"white\");\n    root.style.setProperty(\"--popup-header-color\", \"rgb(58, 12, 58)\");\n    root.style.setProperty(\"--banner-color\", \"rgb(194, 112, 11)\");\n    root.style.setProperty(\"--shadow-color\", \"#eee\");\n    root.style.setProperty(\"--text-color\", \"black\");\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"css/index.css\";\nimport \"css/themes.css\";\nimport App from \"components/App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}